# generated by datamodel-codegen:
#   filename:  categories.json
#   timestamp: 2024-02-16T20:53:52+00:00

from __future__ import annotations

from typing import Any, Dict, Optional

from pydantic import BaseModel, ConfigDict, Field, conint, constr


class Attributes(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    caption: Optional[str] = Field(
        None, description='A short, more specific identifier for this attribute.'
    )
    description: Optional[str] = Field(
        None, description='The description of the attribute.'
    )
    uid: Optional[conint(ge=0)] = Field(
        None, description='The unique identifier for this attribute.'
    )


class Categories(BaseModel):
    """
    The OCSF categories organize event classes, each aligned with a specific domain or area of focus.
    """

    annotations: Optional[Dict[str, Any]] = Field(
        None,
        description='Annotations for this include describing categories it belongs in.',
    )
    description: Optional[str] = Field(
        None, description='A concise description of the object.'
    )
    caption: Optional[str] = Field(
        None, description='A short, human friendly name for the object.'
    )
    attributes: Optional[Dict[constr(pattern=r'^[a-z0-9_]*$'), Attributes]] = Field(
        None, description='A dictionary of attributes for the object.'
    )
