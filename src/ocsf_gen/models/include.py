# generated by datamodel-codegen:
#   filename:  include.json
#   timestamp: 2024-02-16T16:46:55+00:00

from __future__ import annotations

from typing import Any, Dict, Optional

from pydantic import BaseModel, Field, constr

from . import attribute


class Include(BaseModel):
    """
    An include is a collection attributes meant to be included in other objects.
    """

    annotations: Optional[Dict[str, Any]] = Field(
        None,
        description='Annotations for this include describing categories it belongs in.',
    )
    description: str = Field(..., description='A concise description of the object.')
    caption: str = Field(
        ..., description='A short, human friendly name for the object.'
    )
    attributes: Dict[constr(pattern=r'^[a-z0-9_]*$'), attribute.Attribute] = Field(
        ..., description='A dictionary of attributes for the object.'
    )
